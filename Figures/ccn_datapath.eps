%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 855.000000 500.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 855 500
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 855 500
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /I put
dup 35 /T put
dup 36 /C put
dup 37 /S put
dup 38 /F put
dup 39 /B put
dup 40 /bracketleft put
dup 41 /N put
dup 42 /bracketright put
dup 43 /A put
dup 44 /K put
dup 45 /space put
dup 46 /o put
dup 47 /r put
dup 48 /w put
dup 49 /a put
dup 50 /d put
dup 51 /e put
dup 52 /M put
dup 53 /i put
dup 54 /s put
dup 55 /L put
dup 56 /k put
dup 57 /u put
dup 58 /p put
dup 59 /H put
dup 60 /t put
dup 61 /g put
dup 62 /R put
dup 63 /n put
dup 64 /X put
dup 65 /D put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


5F031E35492F405C3B1C1C3B5B404B6D01F339573A1E3B66894E4E88643996872C4C371F30516D3D386851304C0000000002004E0000029A02CA000E0019007DB8001B2FBA0001000F00032BB8000110B8001B10B80016DCB80007DC410500DA000700EA000700025D411B0009000700190007002900070039000700490007005900070069000700790007008900070099000700A9000700B9000700C90007000D5D00BA0000001000032BB8000010BA000F000100032BB8000F103031371133321E0215140E0423031133323E0235342623ADA0425A39191B2A35363010FDF559825428B2A550022A25476540425D3E241305027AFD36325F8B5AACA80000000001004E0000022302CA0009002FBA0007000000032BB8000710B80002D000B800012FBA0000000700032BB8000010BA0006000300032BB80006103031131133112135213521354E5F0148FEB8017602CAFD36014750E3500001004E0000028402CA000B0047BA000B000000032BB8000B10BA0006000500032BB8000610B8000B10B80002D0B8000510B80008D000B800002FB800072FB800012FB800052FBA000A000300032BB8000A1030311311331121113311231121114E5F01785F5FFE8802CAFD360147FEB902CAFECD01330000010052000000B102CA00030017BA0003000000032BB800031000B800012FB800002F303113113311525F02CAFD3602CA0000000001004E0000029E02CA000B002DBA000B000000032BB8000B10B80002D000B800012FB800052FB800002FB800082FBA000A0001000011123930311311333537013309012301114E5F77010278FEC7012D7BFE9602CAFD36FA6FFE9701AA0120FE9C01640001004E0000022702CA0005001FBA0005000000032BB800051000B800002FBA0004000100032BB800041030311311213521114E01D9FE8602CAFD3650027A00000100500000031702CA000E0057BA0003000000032BB8000310BA000B000800032BB8000B10BA000D0000000B11123900B800012FB800052FB800092FB800002FB8000B2FBA000400010000111239BA000800010000111239BA000D000100001112393031131133113313331333113311230B01505A02DF51DF025A82E2E102CAFD360252FDAE0252FDAE02CAFDA802580000000001004D0000028602CA000B004BBA0003000000032BB8000310BA0007000800032BB8000710B8000810B8000AD0B8000A2F00B800012FB800052FB800002FB800072FBA000400010000111239BA000A0001000011123930311311331133013311231123014D5A020175685A02FE8802CAFD36023DFDC302CAFDBD02430000000002004E0000026202CA000800130089B800152FBA0001000900032BB8000110B8001510B80010DCB80005DC410500DA000500EA000500025D411B000900050019000500

06DC00BA0000000100032BB8000010BA0004000500032BB800041030311D01331123153311BBBB6B814403A044FCE80000020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB9002500083E59B800014558B800022F1BB9000200043E59B800014558B800082F1BB9000800043E59BA000500020025111239B8002510B9001C0002F441050089001C0099001C00025D41110008001C0018001C0028001C0038001C0048001C0058001C0068001C0078001C00085DB8002510B8001FDCB8000210B9002E0002F441110007002E0017002E0027002E0037002E0047002E0057002E0067002E0077002E00085D41050086002E0096002E00025DBA003000020025111239BA003100020025111239B8003DD030312506232226350E0123222E0235343E02373E0335342E0223220607233E0333321E0215111416333237270E0515141E0233323E0235020A16272127235D36233F2E1B1E313F21233F301C152129143648035502243C4D2C2345382207140B0F8A1034393A2E1D111B24142A3C2612020D252A2A25102237272C3823120607070D19181C2212062939304229120A1F382DFEF61E1C05C70C0B0709142520151D12081723291200000000020024FFF5020E02CA0013002C00BBB8002D2FBA0015001600032BB8001510B8002D10B80022D0B800222FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8001610B8000AD0B8000A2FB8001610B80018D0B800182FB8001610B8002AD0B8002A2FBA002B00220015111239B8001610B8002CD000B800152FBA000F002700032BB8000F10BA001D000500032BB8001D10303137343E0233321E0215140E0223222E0205112311232E0323220E0215141E023332363733157E10243C2B2C3E271211263C2B293D2713019055020E292E2E143B593B1D1E3B593C365A1502FE264838222136472624463722203645DA02CAFEF6171F13082B49623737624A2C262B46000000020024FFF502030211000A0026005BBA0014001F00032BB8001410BA0015000000032BB8001510B8001410B80001D0B8000010B8000CD0B8000C2F00BA000F002400032BB8000F10BA001A000600032BB8001A10BA0001001400032BB8000110B8002410B8000CDC303101213E0333321E0217230E0123222E023721362E02


2FB8000C2FBA0008001300032BB8000810303121112311140E0223222635112311141E0233323637331501EC5513263927313855112A443339541B020205FEDC233B2C183830015EFEAC2A45321B2D305200000000010011000002E50205000F003500B800012FB800052FB800092FB800002FB8000B2FBA000400000001111239BA000800000001111239BA000E000000011112393031211323032303230323032313331333130240A55874026C5D6802755EA65C6802690205FE5901A7FE5901A7FDFB019BFE6500020037FF5B04A802FA000B00110023B800142BBB00060003000300182B00B800042FB800112FBB00090002000000182B3031372226351133111416332115050901370901F75E62622E30034EFEA20136FECA42017FFE8276606101C3FE3D30345DD7010401004BFEB5FEB80001000000010000451BB6635F0F3CF5011103E800000000B643600000000000D34D8599FC49FE1F07C304350000000900020000000000000001000003B8FF2B001C08B1FC49FE8007C300010000000000000000000000000000002301F40033011600000288FFFA02AD004E02D2002B02C0004E023E004E02D2004E01030052029B004E022C004E0367005002D2004D0288004E02AD004E02880025023E0002026300000103004801030000021900240251002402190024023E002400DE004502070045022C0040023E002402510043014D003D01F4001F013B0009022C004002F6001104BE00370000004800480078013C01AA0212023E027A029402C602E60330037003D8046804FC05220552057E05AA06B4075207BA086C089608C8091009B00A480A760B1A0B6C0BBC0BF60C2C0001000000230096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 35 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/B 3 def
/C 4 def
/D 5 def
/F 6 def
/H 7 def
/I 8 def
/K 9 def
/L 10 def
/M 11 def
/N 12 def
/P 13 def
/R 14 def
/S 15 def
/T 16 def
/X 17 def
/bracketleft 18 def
/bracketright 19 def
/a 20 def
/d 21 def
/e 22 def
/g 23 def
/i 24 def
/k 25 def
/n 26 def
/o 27 def
/p 28 def
/r 29 def
/s 30 def
/t 31 def
/u 32 def
/w 33 def
/uni2B91 34 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93142184C9D9AF35B09B9B2CFE320E80E6018C5839BB77E6DFC734C68F04E32204ECD50C076125AD301E3AE64DEB7F094723D25C1780CE8027A950E3CCA7F001CECDABE8253D8557773A892F730B9890F9C876753CFCFCA9B2F42F6D2194163BE52F3B1461CFEEA81E61CE166B21218513D5164D225FC50235D4FC4CD301662A36943BA2F9C0CAC7255A36FEAC7F764704E26E7F1EAC0016A52DD1F7DB435AB6CE64561E1A8F5510CDE9F245CD29A6380B74FDC0DDC054CB50DCC5F02CEDFD31085B0A5892F98CF73751C640743E701FFFD3E51EE42E875C105D1A15116D5B382DA6EF6A6398FE37E8B45DFC3E7653A5BC4ED29365762FD2C304FB7A2350A6220414F3BD1EEA844E7A26F579222758593A7A1D6847FFA36E0E79CD22AF437ED7BCC9A2ECDDD459B23538B19FD34ED4B752EBD6A1EF6D0770BCCDBEA613C42A80B7CFE6F5948487CDB5D6215F6D43B73A7EB5581CFFB3609C896887ECE9F282ACE047981B779F8F603CEF30B783175002364CDE60F1375F1C45AC9278177074C30E29B635809250A4D4F367626F3F71656569FD523B7B32B693B105AFDCD8483477D539E914D83B2F5A988398430D2BE5F1018604D55E7CA8CBF2139BC04A9B7A12374E471CD5E8156EA28BCB4C614ED4416C10A2830FCA5C7D7A6CD0E1E5AEB592164AF6FB2FEF338B91959014F0710F04E229BF91DDBBE3EAA8D999DF2CDA020B50A5150135498249431B84F7EBDA4A925A23BD2BF048307CAE1C77C4B5A32A38
622AC68EFB8CCA999D429897C2F9408DBCBE875B529E28CA3D63320BBCBC20B7CFD03C13D2501D1BC7E9AE34159594E4AD563EC65F82F7F2A2AB38E66398785F01FD2E976EED73090E97ECD976518759426E710DF03AB603F61A96C9BB7D8E009358A0C56D466DEF99602990BD49E7FDA09539CCFAC70B90A42631D33F580533EF4B4E4F631476B3C40BE8FA531A0453D6F2C20D18F5A32F3B45D077856BB84C103ACD29283A9F7FCA5ECA806D00C01BC9A766BDBB2566E55478A108A67FC6A460F7004606CEB031D6EC374FB26F2D1D56D0CF281291BE40B8E242FAE96F853AC70138833D71F4EBFD5A1AEE91CCD4D6752B16BA0F638FAC502B45B7A4B0D22D118D85A9296FA5A2DFDBAEFEA6805837BD43CFD9F3C21B88EA9AF5FE4E59BD29584827764D5C88B4ECCF77C37CDAC30FB15DC1CB901027155FB6E5E42F9899303BD2D60BC9D35ED9CF567F786B828A1D15756DB5C5D806B3C59F4085DC673C6705D3B55B6143E1C50A6B8FD72503F6B6A252F5184C92C97739CCD2A7A42C7C5B516D29EC9B3A41FCEED0827929ECF26EA05C16818E9F935C70DB7CD5DC808DCAC7D4E64C258BBF822A87E05026F67F26EB359D3A22C34FC6AAA1AF8306639566BFB43FED2049847637FAA6C594B64722AD45C37B237AD3B1FB2D4E652F636E7CD32C74CF83617DEDFC661B30FE10AE9335DF7B559F55774E8E171ABF3D11D371BACD4B69431E969F393BE40D1336BED0752ED28027311E778AEB738F6ED4E7E5CFE60BC3D62076E62196D83680D259A885A07D328FC7B8D3DC27593F5C85E94B503D8EAD54862452DA99A654D22A9FC7E253D0DB591301A6FBF96019FB401962B4B5C8B8DD5CFEE934B04582A16FCAB3FCFF2F69EA0E358D1FBA43423F278F2C8E72A9A6489F18A0ABB7EA9ADAC01571C2CC20D79ABE63FA0D9FDF60FDFC6CB2F832E19CC6FAACD5BEDD27CE8EDEBC2151EF3A29B375CA50FE1F7E4B2830DD83D56C9397A9E2F047EED39B674E8C277DF0A82E81B69753932944137AC7C5339AAA68CD69EBB991B6A77AC5E099DA4E61E0E631A8DC4101D2A150AFAC1A33253A8B4F5C203539B91E1BB97188D4486B5F30C2486883F766ACD19C48E2FF13495BFC5FFE48FE6C230099616F888957D698E6E66DACFB1141569DD6AABEF2366A58C3DB1155A4C14581F304874731515E7A85B43AEC1681B175F95D8DC60A57CBAB93560005925F6396F316890FBB4AB92B0A1588D47081F533201EB961AC6F82047882A2A914794BD62E13925B33B0B44623DE37A83D2CD9A1ADE738B1957B8CA67E725EE3E455DAAE1E09692A2292CE03755A4B0AA13C1F9095CBFBDB4B3512627D5C77F17AD6C45B56DEF32F8FA74FA715390C9215644D6DB0C57421C36BEF1E6BDCAA4C9EED2BF97C449ED13B272BD02EBFBFB090E34328DF47A80D8AF688C3
8DB7BAF7B2D55A5DDE0BBB469E60A3FABD70336E0130743F8C634551E57E2C62091569A609BC8894B1DBFD2D33BF2BE54C294E6B28D7267CFBA69504375DB86BC59526636627D17F47DD5344366D63B1583281164965F2C618CBC9B2EB3F58D9B50B1CB9CBD8D06769335B8B956512ED55BA813993C373E100BEBA47D88C43FFB831FCEA99D759DE6819858EEB81D6906E92FF0EA18C76445BFA4A8D299C95D476D40500EABC0CA2BEB291FD0C515EFEB6EB3739E095DE2E9B3EE48A74A68DEB9114EACCCA9BE5BDC86ECC83A04CD8A05CE279B4E847EDCD158B3D47E063731946D599733A96F64845EB3FD8BE303CB0EE4D313E6151A30FD38545A7791E63C880FF1A7C1DE33627177D3FBD1419FABD7B0905D12B1420713F1E807C395C3CCB497E5294E01D1A4B9C0C5A8D2F1BB692C359306AF40E90845734618530E24242ADC7809CD017741CADFF33E2BABF76822BF04361F3E0035E5B9E30F62F8654267C43D03E932E131A27B7A7E93B995E7C6C5B5EBAB8589E13A8799F5CB826461B408301E5693BA336B147F5F61C07679F56BABF5F439C011B022270395457845EF5D9F31F031A5A87F6A6867D92FDA946FDFA2BD8652ED949DC7EFE39BD85EB3A89CF08B83372D716566CF21BEE4F5CCEA59E5A8A1AB75206A5995D26E8A4968EB65ADE2B184025BFF753B04950C935C7F3C449D3F6BBCEBA079320EAF09B2406FC6EF4439435071BDC5B4C3A58F23229A3A1C90288BD4C082D4714922B0D1D963634E112EE98DAFCC32665064C6B0291A3C7991F44D75408C245E4EE831D7979A549E2737C6C4BD7ECBB0DBA9B73F3AF18C313EB759C4303B92D8E32D5A449854C5D4192F104D510386837F16C18DE38ECCEE106240674B8FD314E3A5608E08A69C95378DCA18A485964EFD7BC4727548C864598E2AF0FD6FBEEE5668853BFFC3B9D0D39A6C56D0EEB6B61702575811D04A5D35245D999337896C4A2905A7A2D4EBF392CB73B0A60563893575EB9744CC33F6202EAD999AA9B0E51F0BCDB25E331008D1E87DB438969276976319EC1C49955661C1BC2C2599CED9E696F9DCF10FFDBF9F64200133971243B48DA7E00DD634E4EC7DE6881983D436B6946A6D5E6DCE0989BB8B936CA338C62E9148777E37A6F2300374C246C97A5D6C0AAFE02D0DDFC20690F928120834E5B1938D4F1A686030607872FAA903938724B73EF997F0DCB3DBDEF8215AF9A037E53DC9D312685A1D196E6EABACEFBDF8884E4699E418262A55210ADF772CD61F1A45EE3036FD88132989D917151FA36C4BD4C366FCD757D512413B1E81BA500C6D70DC86AD19B8306C6B929885A69B0C775575A7732DF9323A58DB31F36D96B0E0DA4CCE34F22EAD14F2835D10C0B61A4D73021FBDC5329CBE6FF2ECE047304025A17A83FF98F33E30E5DB182B2E3ECFF92CCD17698
F90544C886E4ECE063555486B39FFFE8F19F3F462A6672CB6526EAA18F80FA3ADC477D5030F9F8350D97B96C872BA8A671663960095B37B93B6D0871E611BEA1AC20831A141375D4F180D7AB064517254D5BFC94396D5F670DA8F0E26B8D2B3B435BD46B7A634FEF37CCA2FC812F6512B36696CE49CE33FF67EDF8D7F3B361A0A52E7484B33F650E40B81A4F0D3BA242665AF757158C53876302D20C3BC2315054165AC271ED9A11DBE9F60C45CDAB529AD3A06321D86774CD669B7A3C964157B89EEADAA04A81669A60CCF9512FE4C6D811AB1CC9058A6E63A16DAD141D6252EAFC663C53656DF90D3D9FCB91D95D90A38119B1CE3E8345E9F10242978B0273159E90575BE4D57FE757B8F1427F54AD0ECB95BDBEC3ED66BAD7F5EDCD144C862C2FEA46883C4D6D768C5A7886B22EE5CFE34871AA128EF18D100BC17BD5B0E099419B9BEF75B1D3E59DC6239D5717C0500BCEA439D013663824B11E7468FEE38833B504A3624B7DB63BE2081C4D8806D9FDA173E1764766EFA649D5BCA7A4CB42F88BA99170869E7D240C18A871DC72D8A1C9FA260392493B4370D9D4175ED42A95792BB3B4E05785991FF8D11849E4DB8CDDC6742BA789572EAC0B2865AAA7441E1324B78DC51FB57EBB5F797C19A04B34E6FC6516C767754FEF24144361C6E1F76B6259E99A6139B660A44E59D3BE2BF39300405B4B5DCF6BB40A6A580D585D3D51D5B395EA649D2B55B04E67A271D1BE16A3ECDE26A2ED315D5A60162D110234C59207B1D2CEC9A489DFD333B03182EAFF85EF782AECFF72BE92234BA184E436DAC9A3E0193F43AEC09BE7BE6E3FFD3A9A5C60C1EDAB7106D086DF00C3B0E28A1CAD7CFB5AAAC0EDF1AE13624F9279ED4D0EAE575B2EFD19AA781EB7083548CECE115D934C09BF8600248FAB5A58EBA0EC36BF791F22B7842C3F076B90E23729DE304DAA25836C7DBC8EB382DC8228FDD2771CF73AB8A7BFB3F32314C403678057587933C689B0325E21125EF4FB56026768B8DD8C8CBA786DC26276B15CBA3D7630CAEBF87A7A9F1CFCAA21878BCB42880223DFA322A262D8463C2485B193C500AC9512E6B2E20C31A8FAFD4C95081CB10F6F742C4168F95FD1357364D974B3D158DF14405AB818F7A12DAD69EC216AC80D834BFCF27B3B153366CF0B95A6328FBC63BB90EB5F1470B198F3913B05019EB3DE8F19562649D999A9D62402ACBA5567203DF9C360FBDC29D00A0FD49E4F75CB1D6703D859609E593409ABF8F8252953C427A189D79AF3E5B9FBD935EBAA000A952E03ACE5A9EB2A97AFB2D0F1025F65C6CF233BDC5DE44923D73CFD5AEDC730ED5BA74C8F8090F29E99A6D8B2DEE1CB2B0EF18AD7169A4088BA73BC6036DB292A77FEF2D1DF469D3C7984946D62AC3E6C38418CA16AD3DC090369D43EEEB3EDEC13D313643B840118D8DDE2
EFBF30FEE952E9A6F05203F6A04190987489497FA1568EB4CAE522E5ECADB2A821E3EC3DAC535D9639725FFF3BDFA6490AAE4489E32FAC9277EFF526593DE233D144FE2CC3A136E1B46627CE0553D69E7F46CACB5D5BCFD5180A234718404A092533661C25B0FBA0DBC550A232D6EACBFADFF98781078EFC8A4A14B09A83BA8DB01D088BEC9F25B8B89B3D507D80DFA5B4236C0167B68700AE33AE9B11EAFE5ED7F7A5BFBC73A56DBC75059883BF50F0443EAF29FCE0CB115DDA78A12D18301C5C05293D123CE12268330D31A82B1C99A857DDD28029D741D497364A3CFFDF1A02F8912E0C0FA54A7F360D1FCF0506110772E0AF7FA248BC38B089BDADD360E9F9816AEACB45366E99979700D608873FB7A021B63425E2E69E8307F8BAE84D4856CFA858FFE000CA4D005FAAFDF00CCE53F0994F4B55BC2D3B482B67F5B14FA478C1A32DF0800C3F5FFD9ACA494506934DE493C0E44A15113F2D2CD3C39A59554BCE224A02D7E25AD3E9F6F48A6E0503BA6D1DF4DB470EC84EA47C9AB581953DB03FE3409897F4D376165FB426F5E385500D4A758B01CD4920565E78304B77FA93DBEAB28F22A067A0638CCD983BBBD0F6512EDA224D4130056B8D1F73F94481E1BB063A0ED813EA2B04F6B7A2B01697F6C082416C1565D74B73920B532B8B1AEFF194CFB67F5550CF4F05D4CD2D4DEC0CD3F0D5E9F1709D63DA1F79B327CCABE5FB4722F7A7036A256795300AD20A19A5F764280A436C167988BC1BE2DD518825D3E637E6E422E01F98D312CA9FA3E1889089CC1BEE7379C42ED363AB8F94EBBE5EC62B7F43A963B7F3FDF2BFB62012DB8C11C6CE5B460088C2F1F08806B01C6FFF39C0D9C5A0540A313A052F1AFE40BFEED10AAE61145DC8DD0E62E2322B579B300A8A564F7EA354CEAEC68E7A6B85C073F108FE9C1859A281C6720D42359CCF30AD3230EC52098CAA3FB5A67B23153F02D03935EBF1BC89469C1A41B65BE34231DE766903FC96D7D2A4357891A4C34FDEEF1EB6730E60BFC2782FB6B560887FDD248C9114B19311F31C54E7D93471AF0EDDA3BC8417FCED5B9620D566727ED9E27A472DCB4510E11A8F2F0C4674D9AD2A8532C9DEA525021F4069DD1B94421D1C9EA5067CADAF219A1D7F94BD76655504B1B457657743B73AFC30AC3F6B602BEEB00D67CFBBB6EE4E507E7CE4439D598989DAFC7B5F609ABF4188BA7B7775E6018BDC1B1954DF0D5F4228B2F208E103816C1716A2D2A76020C8054C678A59CBC4A4ED285384D8B72D8CF052CE7A9D2F3184AF8FC8A0DC4B07AC7FE34F722CB0A177929BC52FD85EE5D8DA899BB0C1AB1559F532B8ABB4078ED3CB34B7B472742D0EF1449242660DFD66037840CD5B084B4D9482783B4F95A0D9433C47B556A237C7DA816AA274C991B5861BB86541317D7606AB01D1827E888FE8EC478D73
AEFF17CD4B8C0E3FE7B3883CBC46B8F65228EB8E64D382A3EFB0814C8AC3287CA829B93B9BD298F1C7235F54087E56899E401B25470CE9C7AF2D3E0841289C5A632BA29812F9444180FE4EF4D46B91BD56F246F4BD7BF520CFE1AC463D95BC3CC18D5364176A5726EFD7F2439BC7BB38304FB6B99B3EA43836EE77F06461844B4E71C90FC35526FC65F544617E560A53F2E71268E813C378A9D8B33D7F2814C3A7373744E2235BAD719535E67C0B58EB737A7FB5B664E5454FEC8375DF53388B1DF98100E7DC36FDC104C57E49777E259937EE628B8F1845FDDA2F4A25FCE4A39D3F696B295FCD265FB3AD1C473C95EE41351EFB51FB78806EAFB436C85070EB517821667345571A0F88FD6CE3363413CAC989C720AA1CC460A5A5633B173B504D3769D8F34CDB258DD4A41F4AE67E48F97B49D9E4CE294D524A6AEEE16AFFE84538116BDA5F96038FDE53DBE83B9B32C3E4744F64ACBDD9DA48214B04A2BB14CB8AB2BDFFA1D2E31B4EBA30E69A84A48D70C81EFD7DDE6505F625ACDF605DD9B91E40EC321E14AD82A8063E5002260C1B7355C8C860F1BE71BBC86879A339CA4DF3F89BA683362D1F1F2D1ABA6C4F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 855 500 rc
0 500 m
855 500 l
855 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1437.7358 1610.6227 m
2311.3208 1610.6227 l
2311.3208 -1038.434 l
-1437.7358 -1038.434 l
h
-1437.7358 1610.6227 m
f
97 499.5 m
779.5 499.5 l
781.70917 499.5 783.5 497.70914 783.5 495.5 c
783.5 290 l
783.5 287.79086 781.70917 286 779.5 286 c
97 286 l
94.790863 286 93 287.79086 93 290 c
93 495.5 l
93 497.70914 94.790863 499.5 97 499.5 c
h
97 499.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 19 571 cm
78 71.5 m
760.5 71.5 l
762.70917 71.5 764.5 73.290863 764.5 75.5 c
764.5 281 l
764.5 283.20914 762.70917 285 760.5 285 c
78 285 l
75.790863 285 74 283.20914 74 281 c
74 75.5 l
74 73.290863 75.790863 71.5 78 71.5 c
h
78 71.5 m
S
0 i
1 1 1 sc
CM
368.25 458 m
459.25 458 l
461.45914 458 463.25 456.20914 463.25 454 c
463.25 384 l
463.25 381.79086 461.45914 380 459.25 380 c
368.25 380 l
366.04086 380 364.25 381.79086 364.25 384 c
364.25 454 l
364.25 456.20914 366.04086 458 368.25 458 c
h
368.25 458 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 19 571 cm
349.25 113 m
440.25 113 l
442.45914 113 444.25 114.79086 444.25 117 c
444.25 187 l
444.25 189.20914 442.45914 191 440.25 191 c
349.25 191 l
347.04086 191 345.25 189.20914 345.25 187 c
345.25 117 l
345.25 114.79086 347.04086 113 349.25 113 c
h
349.25 113 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 413.75 419 cm
/F1.1[ 16 0 0 -16 0 0]sf
-11.848 5.776001 m
(!"#)[ 10.368000 4.144000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
175 458 m
266 458 l
268.20914 458 270 456.20914 270 454 c
270 384 l
270 381.79086 268.20914 380 266 380 c
175 380 l
172.79086 380 171 381.79086 171 384 c
171 454 l
171 456.20914 172.79086 458 175 458 c
h
175 458 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 19 571 cm
156 113 m
247 113 l
249.20914 113 251 114.79086 251 117 c
251 187 l
251 189.20914 249.20914 191 247 191 c
156 191 l
153.79086 191 152 189.20914 152 187 c
152 117 l
152 114.79086 153.79086 113 156 113 c
h
156 113 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 220.5 419 cm
-10.96 5.776001 m
($%)[ 11.552000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
561.5 458 m
652.5 458 l
654.70917 458 656.5 456.20914 656.5 454 c
656.5 384 l
656.5 381.79086 654.70917 380 652.5 380 c
561.5 380 l
559.29083 380 557.5 381.79086 557.5 384 c
557.5 454 l
557.5 456.20914 559.29083 458 561.5 458 c
h
561.5 458 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 19 571 cm
542.5 113 m
633.5 113 l
635.70917 113 637.5 114.79086 637.5 117 c
637.5 187 l
637.5 189.20914 635.70917 191 633.5 191 c
542.5 191 l
540.29083 191 538.5 189.20914 538.5 187 c
538.5 117 l
538.5 114.79086 540.29083 113 542.5 113 c
h
542.5 113 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 607 419 cm
-12.144 5.776001 m
(&"')[ 9.184000 4.144000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 19 571 cm
142.10001 152 m
59.5 152 l
S
0 i
CM
169.10001 419 m
161.10001 422 l
161.10001 416 l
h
169.10001 419 m
f
0 J
0 j
1 0 0 -1 19 571 cm
150.10001 152 m
142.10001 149 l
142.10001 155 l
h
150.10001 152 m
S
1 J
1 j
0.60000002 i
335.35001 152 m
251 152 l
S
0 i
CM
362.35001 419 m
354.35001 422 l
354.35001 416 l
h
362.35001 419 m
f
0 J
0 j
1 0 0 -1 19 571 cm
343.35001 152 m
335.35001 149 l
335.35001 155 l
h
343.35001 152 m
S
1 J
1 j
0.60000002 i
528.59998 152 m
444.25 152 l
S
0 i
CM
555.59998 419 m
547.59998 422 l
547.59998 416 l
h
555.59998 419 m
f
0 J
0 j
1 0 0 -1 19 571 cm
536.59998 152 m
528.59998 149 l
528.59998 155 l
h
536.59998 152 m
S
1 J
1 j
0.60000002 i
637.5 152 m
769.09998 152 l
S
0 i
CM
796.09998 419 m
788.09998 422 l
788.09998 416 l
h
796.09998 419 m
f
0 J
0 j
1 0 0 -1 19 571 cm
777.09998 152 m
769.09998 149 l
769.09998 155 l
h
777.09998 152 m
S
1 J
1 j
0.60000002 i
201.5 191 m
201.5 238.96873 l
S
394.75 191 m
394.75 229.60001 l
S
0 i
CM
413.75 333.39999 m
416.75 341.39999 l
410.75 341.39999 l
h
413.75 333.39999 m
f
0 J
0 j
1 0 0 -1 19 571 cm
394.75 237.60001 m
397.75 229.60001 l
391.75 229.60001 l
h
394.75 237.60001 m
S
1 J
1 j
0.60000002 i
588 191 m
588 272.76953 l
S
588 272.76953 m
65.399971 273.97711 l
S
0 i
CM
76.399994 297.00439 m
84.406906 294.02289 l
84.393044 300.02286 l
h
76.399994 297.00439 m
f
0 J
0 j
1 0 0 -1 19 571 cm
57.399994 273.99561 m
65.406906 276.97711 l
65.393044 270.97714 l
h
57.399994 273.99561 m
S
/Cs1 SC
0 sc
1 0 0 -1 61.5 419 cm
-11.992 5.776001 m
("\(\)*)[ 4.144000 4.144000 11.552000 0.000000 ] xS
1 0 0 -1 815 419 cm
-11.992 5.776001 m
("\(\)*)[ 4.144000 4.144000 11.552000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 19 571 cm
201.5 238.96873 m
65.400002 238.99422 l
S
0 i
CM
76.400002 332.00427 m
84.400558 329.0058 l
84.399437 335.0058 l
h
76.400002 332.00427 m
f
0 J
0 j
1 0 0 -1 19 571 cm
57.400002 238.99571 m
65.400558 241.99422 l
65.399437 235.99422 l
h
57.400002 238.99571 m
S
/Cs1 SC
0 sc
1 0 0 -1 53.5 332 cm
-15.696 5.776001 m
($\(\)*)[ 11.552000 4.144000 11.552000 0.000000 ] xS
1 0 0 -1 37.5 301 cm
-31.992001 5.776001 m
(\)+$,\(\)*)[ 11.552000 10.368000 11.552000 10.672000 4.144000 11.552000 0.000000 ] xS
1 0 0 -1 155.875 484.5 cm
-55.984001 5.776001 m
($$\)-&./01/23/)[ 11.552000 11.552000 11.552000 4.448000 9.184000 9.184000 5.328000 12.128000 8.592000 5.040000 9.488000 8.592000 0.000000 ] xS
1 0 0 -1 314.6875 419 cm
-30 -3.447998 m
($%-4566)[ 11.552000 10.368000 4.448000 13.936000 3.552000 8.000000 0.000000 ] xS
-30 15 m
(7..89:)[ 8.896000 9.184000 9.184000 8.304000 8.896000 0.000000 ] xS
1 0 0 -1 126.875 431.5 cm
-26.976 5.776001 m
(7..89:)[ 8.896000 9.184000 9.184000 8.304000 8.896000 0.000000 ] xS
1 0 0 -1 503.35938 419 cm
-31 -3.447998 m
(!"#-4566)[ 10.368000 4.144000 9.184000 4.448000 13.936000 3.552000 8.000000 0.000000 ] xS
-31 15 m
(7..89:)[ 8.896000 9.184000 9.184000 8.304000 8.896000 0.000000 ] xS
1 0 0 -1 458 356.5 cm
-37 -3.447998 m
(!"#-;5<)[ 10.368000 4.144000 9.184000 4.448000 11.552000 3.552000 0.000000 ] xS
-37 15 m
(+==/3=1<3)[ 10.368000 9.184000 9.184000 5.040000 8.592000 9.184000 8.592000 5.040000 0.000000 ] xS
1 0 0 -1 285.5 356.5 cm
-55 -3.447998 m
($%-;5<)[ 11.552000 10.368000 4.448000 11.552000 3.552000 0.000000 ] xS
-55 15 m
(>3<9/?-$.?<3?<)[ 10.960000 8.592000 5.040000 8.896000 5.616000 8.896000 4.448000 11.552000 9.184000 8.896000 5.040000 8.592000 8.896000 0.000000 ] xS
1 0 0 -1 643 340.5 cm
-31.112 -3.223999 m
(&"'-4566)[ 9.184000 4.144000 10.960000 4.448000 13.936000 3.552000 8.000000 0.000000 ] xS
1 0 0 -1 720 446 cm
-58.5 -3.447998 m
(&"'-;5<)[ 9.184000 4.144000 10.960000 4.448000 11.552000 3.552000 0.000000 ] xS
-58.5 15 m
(&./01/2-"?<3/36<)[ 9.184000 9.184000 5.328000 12.128000 8.592000 5.040000 9.488000 4.448000 4.144000 8.896000 5.040000 8.592000 5.040000 8.592000 8.000000 0.000000 ] xS
1 0 0 -1 149 308 cm
-50.967999 5.776001 m
(\)+$,-"?<3/36<)[ 11.552000 10.368000 11.552000 10.672000 4.448000 4.144000 8.896000 5.040000 8.592000 5.040000 8.592000 8.000000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 19 571 cm
588 272.76953 m
643.60004 272.93924 l
S
0 i
CM
670.60004 298.03632 m
662.60919 301.06073 l
662.59088 295.06076 l
h
670.60004 298.03632 m
f
0 J
0 j
1 0 0 -1 19 571 cm
651.60004 272.96368 m
643.60919 269.93927 l
643.59088 275.93924 l
h
651.60004 272.96368 m
S
/Cs1 SC
0 sc
1 0 0 -1 682.5 298 cm
-4.888 5.776001 m
(@)s
1 0 0 -1 629 308 cm
-17.488001 5.776001 m
(A/.:)[ 11.264000 5.040000 9.184000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
97 214 m
779.5 214 l
781.70917 214 783.5 212.20914 783.5 210 c
783.5 4.5 l
783.5 2.2908609 781.70917 0.5 779.5 0.5 c
97 0.5 l
94.790863 0.5 93 2.2908609 93 4.5 c
93 210 l
93 212.20914 94.790863 214 97 214 c
h
97 214 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 19 571 cm
78 357 m
760.5 357 l
762.70917 357 764.5 358.79086 764.5 361 c
764.5 566.5 l
764.5 568.70917 762.70917 570.5 760.5 570.5 c
78 570.5 l
75.790863 570.5 74 568.70917 74 566.5 c
74 361 l
74 358.79086 75.790863 357 78 357 c
h
78 357 m
S
0 i
1 1 1 sc
CM
368.25 172.5 m
459.25 172.5 l
461.45914 172.5 463.25 170.70914 463.25 168.5 c
463.25 98.5 l
463.25 96.290863 461.45914 94.5 459.25 94.5 c
368.25 94.5 l
366.04086 94.5 364.25 96.290863 364.25 98.5 c
364.25 168.5 l
364.25 170.70914 366.04086 172.5 368.25 172.5 c
h
368.25 172.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 19 571 cm
349.25 398.5 m
440.25 398.5 l
442.45914 398.5 444.25 400.29086 444.25 402.5 c
444.25 472.5 l
444.25 474.70914 442.45914 476.5 440.25 476.5 c
349.25 476.5 l
347.04086 476.5 345.25 474.70914 345.25 472.5 c
345.25 402.5 l
345.25 400.29086 347.04086 398.5 349.25 398.5 c
h
349.25 398.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 413.75 133.5 cm
-11.848 5.776001 m
(!"#)[ 10.368000 4.144000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
175 172.5 m
266 172.5 l
268.20914 172.5 270 170.70914 270 168.5 c
270 98.5 l
270 96.290863 268.20914 94.5 266 94.5 c
175 94.5 l
172.79086 94.5 171 96.290863 171 98.5 c
171 168.5 l
171 170.70914 172.79086 172.5 175 172.5 c
h
175 172.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 19 571 cm
156 398.5 m
247 398.5 l
249.20914 398.5 251 400.29086 251 402.5 c
251 472.5 l
251 474.70914 249.20914 476.5 247 476.5 c
156 476.5 l
153.79086 476.5 152 474.70914 152 472.5 c
152 402.5 l
152 400.29086 153.79086 398.5 156 398.5 c
h
156 398.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 220.5 133.5 cm
-10.96 5.776001 m
($%)[ 11.552000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 19 571 cm
152 437.5 m
69.400002 437.5 l
S
0 i
CM
80.400002 133.5 m
88.400002 130.5 l
88.400002 136.5 l
h
80.400002 133.5 m
f
0 J
0 j
1 0 0 -1 19 571 cm
61.400002 437.5 m
69.400002 440.5 l
69.400002 434.5 l
h
61.400002 437.5 m
S
1 J
1 j
0.60000002 i
345.25 437.5 m
260.89999 437.5 l
S
0 i
CM
271.89999 133.5 m
279.89999 130.5 l
279.89999 136.5 l
h
271.89999 133.5 m
f
0 J
0 j
1 0 0 -1 19 571 cm
252.89999 437.5 m
260.89999 440.5 l
260.89999 434.5 l
h
252.89999 437.5 m
S
1 J
1 j
0.60000002 i
394.75 476.5 m
394.75 513.59998 l
S
0 i
CM
413.75 49.400002 m
416.75 57.400002 l
410.75 57.400002 l
h
413.75 49.400002 m
f
0 J
0 j
1 0 0 -1 19 571 cm
394.75 521.59998 m
397.75 513.59998 l
391.75 513.59998 l
h
394.75 521.59998 m
S
/Cs1 SC
0 sc
1 0 0 -1 57.5 133.5 cm
-15.696 5.776001 m
($\(\)*)[ 11.552000 4.144000 11.552000 0.000000 ] xS
1 0 0 -1 155.875 199 cm
-55.984001 5.776001 m
($$\)-&./01/23/)[ 11.552000 11.552000 11.552000 4.448000 9.184000 9.184000 5.328000 12.128000 8.592000 5.040000 9.488000 8.592000 0.000000 ] xS
1 0 0 -1 319.56641 133.5 cm
-24.5 -3.447998 m
(!"#-;5<)[ 10.368000 4.144000 9.184000 4.448000 11.552000 3.552000 0.000000 ] xS
-24.5 15 m
("?63/<)[ 4.144000 8.896000 8.000000 8.592000 5.328000 0.000000 ] xS
1 0 0 -1 136.5 146 cm
-29.472 5.776001 m
(&./01/2)[ 9.184000 9.184000 5.328000 12.128000 8.592000 5.040000 0.000000 ] xS
1 0 0 -1 509.5 146 cm
-27 5.776001 m
(7..89:)[ 8.896000 9.184000 9.184000 8.304000 8.896000 0.000000 ] xS
1 0 0 -1 452 71 cm
-31 -3.447998 m
(!"#-4566)[ 10.368000 4.144000 9.184000 4.448000 13.936000 3.552000 8.000000 0.000000 ] xS
-31 15 m
(A/.:)[ 11.264000 5.040000 9.184000 0.000000 ] xS
1 0 0 -1 413.75 32.5 cm
-4.888 5.776001 m
(@)s
1 0 0 -1 834 133.5 cm
-15.696 5.776001 m
($\(\)*)[ 11.552000 4.144000 11.552000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
571.27734 172.5 m
662.27734 172.5 l
664.48651 172.5 666.27734 170.70914 666.27734 168.5 c
666.27734 98.5 l
666.27734 96.290863 664.48651 94.5 662.27734 94.5 c
571.27734 94.5 l
569.06818 94.5 567.27734 96.290863 567.27734 98.5 c
567.27734 168.5 l
567.27734 170.70914 569.06818 172.5 571.27734 172.5 c
h
571.27734 172.5 m
f
102 0 0 81 566 93 cm
BI
/Width 306
/Height 243
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$JcC<$JcG'9JcC<$JcC<$JcC<$JcG'9JcC<$JcC<$JcC<$JcG'9i;`fNrp0R?rmC_`J\SJ)
J\QcNJ\QcNT"k9Grmh#-rpTjah>cX;rpg!1J\RqoJ\QcNJ\QcNP/%"3rmh#Fj8\KGrr2oQrkO*"T>,rl
J\QcNJ\R/Yrl+m'k5XoMrpp'2pqQgHrm^r+rpKd_JcE"TJcC<$JcC<$T)\farp'L=rm:Y[pqQg[rql'^
o)J^`rknNGrmh#EJcDSHJcC<$JcC<$P5kOOrlOrMrm:$3o)J^9qnN-Krp#(7TDsKBJcC<$JcCf2rr)iN
rkSEGroNVKp&G$PqnN-Irq1jBSH"0?JcC<$JcCT,ro3girke[/o)JLbrq??.qnN-jJcD/<JcC<$JcC<$
LB%7uqnN-Vo)JLbrmpt]rm-/qQN)O9JcC<$JcCK)rq??.qnN-sp&FgerlFuOrq(dAQN)O9JcC<$JcCB&
rnmUfrnd>Jqu?ZmqnN-KJcCr6JcC<$JcC<$KE(r=qnN-Xp&FphrpTa!rm65rPQ-46JcC<$JcCB&rqlT-
rl"L0qu?ZTqnN-dJcCr6JcC<$JcC<$Jc>`MrlFuOrqH3fqu?ZHqnN-pJcCr6JcC<$JcC<$Jc>`MrmUbZ
rp9F[qu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\
rp':Yqu?ZGqnN-qJcCr6JcC<$JcC<$Jc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6TDo)knE&!=cc"98ccY#+
o_&4frUoC#b0Tn4"OGEIkksrM"o@`MccXSme+hB(f%/O-gY:QBiT'.gmIBiAqYc!FSH"0?!<<&KqnN-q
q#C6krmgn\rp#(7PQ.9T!qPC#^V9j!j7;mC!rV]PoY1IRjnnQI!qPC#hS80e"52`%qgnd@s+11Ms8LRG
^]*Nns82iqebd,\l@Ju!s.B;mo]=Z=^B2mEo(E"ar:K+C^B2aCr:'^fo]=Z\^Yup0b2E!lJcDSHJc>`M
rmgn\rp':Yqu?ZGqnN-qJcCr6TDnubjjq2]!mfirp&>*ko]>_[!mg!+nG`R^jjr;'hS0-<j8+?,VuM>J
!<<&KqnN-qq#C6krmgn\rp#(7PQ.9T!qbU*otLXPf&5cWdc^hskNqa6p&>*ko]>_[!mg!+nG`R^jjs+>
"No<Rkj%X#qre@LkN1gai8*);cg8CJe)g.Os/H$LrrE)uebd,\lM1DVs8LRG^]*MLs-*JTrrViSf(HcZ
e)g5:rrW,jjn-:hcfP)orrViSf(HcZe)g5hs7-*mrquQYjk9.<!nm8FJcDeNJc>`Mrmgn\rp':Yqu?ZG
qnN-qJcCr6TDnubjjs+>!n63#^]+B5o]>_[!mg!+nG`R^jjs+>!n63#mJlMP!qb[/o"P7fo_a:?XT*kO
!<<&KqnN-qq#C6krmgn\rp#(7PQ.9T!qbU*otLRWj79tb!rV]PoY1IRjo"WJ!qbU*otLRWj7;U;l2Lh[
i6(],!nll4JcDhOJc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6TDnubjjs+>!n63#^]+B5o]>_[!mg!+nG`R^
jjs+>!n63#mJlDM!qG6uotLRWj77d$XT*kO!<<&KqnN-qq#C6krmgn\rp#(7PQ.9T!qbU*otLRWj79tb
!rV]PoY1IRjo"WJ!qbU*otLRWj7;U;kl1_Vjjs+>!mfotJcDhOJc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6
TDnubjjs+>!n63#^]+B5o]>_[!mg!+nG`R^jjs+>!n63#mJlDM!qbU*otLRdnG7_9XT*kO!<<&KqnN-q
q#C6krmgn\rp#(7PQ.9T!qbU*otLRWj79tb!rV]PoY1IRjo"WJ!qbU*otLRWj7;U;l2Lh^jj3S6!pK=U
JcDhOJc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6TDnubjjs+>!n63#^]+B5o]>_[!mg!+nG`R^jjs+>!n63#
mJlMP!rMNJo=k=apjrIFs+11Ms8LRG^]*Nns82iqebd,\l@Ju!s.B;mo]=Zs^B2mEo"Y2+r:K+C^B2aC
r:'^fo]=Zs^B2mEo'QJFrr`&elHf(:!o<8<JcD_LJc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6TDnubjjs+>
"k2H"rVlcIquQcqmf*@do]>_[!mg!+nG`R^jjs+>"j5ckrVlcbr;HQkr<W>uq"F7FkM+JU^B;X5m/;M8
VuM>J!<<&KqnN-qq#C6krmgn\rp#(7PQ.9T!qbU*`P2K5o)%nU!rV]PoY1IRjo"WJ!qbU*hS86g!QrRa
^B;sCmJMP8V#Q#G!<<&KqnN-qq#C6krmgn\rp#(7PQ.9T!qbU*`P2K7o)%nU!rV]PoY1IRjo"WJ!qbU*
hS8?j!6Y5S!nQT4JcDGDJc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6TDnubjjqDc!orkKn,EIeo]>_[!mg!+
nG`R^jjr;'i4fB:j6lVls/,gIrrE)uebd,\lM1DVs8LRG^]*MLs-*JTrrViSf#>B*jn/K>rrW,jjn-:h
cfP)orrViSf&"0s^B<'InG\"=WrIYM!<<&KqnN-qq#C6krmgn\rp#(7PQ.9T!qbU*otL[Vh<ak0pY#6@
p\O7V!rV]PoY1IRjo"WJ!qbU*otL[Vh<ak0p[InNp'UKbo^VA:kMtLLb3m"Gg$&*[s/c6OrrE)uebd,\
lM1DVs8LRG^]*MLs-*JTrrViSf(HcZe)g5:rrW,jjn-:hcfP)orrViSf(HcZe)g5hs6Tagrq>jEcgeaO
e+*?es/uBQrrE)uebd,\lM1DVs8LRG^]*MLs-*JTrrViSf(HcZe)U#6rrW,jjn-:hcfP)orrViSf(HcZ
e)U#ds60IbrV#O!o=k@[kk0N,YQ'1R!<<&KqnN-qq#C6krmgn\rp#(7PQ.9T!qbU*otLRWj79tb!rV]P
oY1IRjo"WJ!qbU*otLRWj7;U;jo5DQjjs(=!mg!*JcDtSJc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6TDnub
jjs+>!n63#^]+B5o]>_[!mg!+nG`R^jjs+>!n63#mJl;J"9/)^b4WLNe*$X[s02NSrrE)uebd,\lM1DV
s8LRG^]*MLs-*JTrrViSf(HcZe)U#6rrW,jjn-:hcfP)orrViSf(HcZe)U#ds5a1]rUe\5^B3*\rIP!R
s+11Ms8LRG^]*Nns82iqebd,\l@Ju!s.B;mo]=Zs^B2mEo"Y2+r:K+C^B2aCr:'^fo]=Zs^B2mEo'QJ<
rrW&bch5$Sb2E#Fs02NSrrE)uebd,\lM1DVs8LRG^]*MLs-*JTrrViSf(HcZe)U#6rrW,jjn-:hcfP)o
rrViSf(HcZe)U#ds5j7^r:K+C^B2aCr.4mPs+11Ms8LRG^]*Nns82iqebd,\l@Ju!s.B;mo]=Zs^B2mE
o"Y2+r:K+C^B2aCr:'^fo]=Zs^B2mEo'QJ>rr`5bfuis%!o*)@JcDtSJc>`Mrmgn\rp':Yqu?ZGqnN-q
JcCr6TDnubjjs+>!n63#^]+B5o]>_[!mg!+nG`R^jjs+>!n63#mJlDM!rDEFo"P7ZlLof/YQ'1R!<<&K
qnN-qq#C6krmgn\rp#(7PQ.9T!qbU*otLRWj79tb!rV]PoY1IRjo"WJ!qbU*otLRWjn.s?m/I1cnE8Ws
^B30`rdk*Ps+11Ms8LRG^]*Nns82iqebd,\l@Ju!s.B;mo]=Zs^B2mEo"Y2+r:K+C^B2aCr:'^fo]=Zr
^BDmAnFH,=nFlANnHJFMki:UImCr_Wm.Z)2XT*kO!<<&KqnN-qq#C6krmgn\rp#(7PQ.9T!qbU*otLRW
j79tb!rV]PoY1IRjo"WJ!qbU*hS7g[!o*#=JcDbMJc>`Mrmgn\rp':Yqu?ZGqnN-qJcCr6TDnubjjs+>
!n63#^]+B5o]>_[!mg!+nG`R^jjr;'hnK9>i9^Ams/5mJrrE)uebd,\lM1DVs8LRG^]*MLs-*JTrrViS
f(HcZe)U#6rrW,hjn-:hcf=olrrViSf&"1%^B;sJnFhG5U]5oF!<<&KqnN-qq#C6krmgn\rp#(7PQ.9T
!qbU*otLRWjmp1d"9/#Zb4`RPb2)IanG`R^jjr;'n%T4Pcd1(pi8s@spAKRBT)XBA!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6k
rmgn\rp#(7PQ-46JcC<$JcC<$!<<&KqnN-qq#C6krmpt]roo"6PQ-46JcC<$JcC<$!<<&IqnN-sq#C6k
ro3girnW/*PQ-46JcC<$JcC<$!<<&>qnN.)q#C6krpTa!rm65rPQ-46JcC<$JcCB&rqlT-rl"L0qu?Zm
qnN-KJcCr6JcC<$JcC<$KE(r=qnN-Xp&FgerlFuOrq(dAQN)O9JcC<$JcCB&rndOernd>Jq#C?EqnN-V
JcD&9JcC<$JcC<$LB%8HrkeQIrp9=Xq#C?erkeQIro8S0RK%j<JcC<$JcCK)rm(DUrm108p&G$PqnN-I
rq1jBSH"0?JcC<$JcCT,ro3girke[/o)J:\rm:PWrl"g$JcDABJcC<$JcC<$O8o4XrnIFfqnN-ln,MtY
rqHE0pqQgYrq_3GV>l,HJcC<$JcCo5rpg!0pqQgTm/QPSrpp'2pqQgHrm^r+rpKd_JcE"TJcC<$JcC<$
T)\farp'L=rm:Y[pqQg[rql'^m/R(arn[RhJ\RhlJ\QcNJ\QcNN5,A2rp/_Hk5YGNrlTf,U;)8oJ\QcN
J\RA_rkSN`rqkaUi;`fNrp'L>rmC_`J\SJ)J\QcNJ\QcNT"k9Grmh#-rpTj`h>`'+JcC<$JcC<$JcC<$
li2P9JcC<$JcC<$JcC<$li2P9JcC<$JcC<$JcC<$li2J
~> %APLeod
EI
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 19 571 cm
454.14999 437.5 m
794 437.5 l
S
0 i
CM
465.14999 133.5 m
473.14999 130.5 l
473.14999 136.5 l
h
465.14999 133.5 m
f
0 J
0 j
1 0 0 -1 19 571 cm
446.14999 437.5 m
454.14999 440.5 l
454.14999 434.5 l
h
446.14999 437.5 m
S
ep
end
%%Trailer
%%EOF
